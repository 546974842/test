<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="vitily.com.mapper.mem.MemBaseMapper" >
  <resultMap id="BaseResultMap" extends="vitily.com.mapper.comm.CommonMapper.BaseResultMap" type="vitily.com.tb_entity.mem.TbMemBase" >
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="reg_from" property="regFrom" jdbcType="INTEGER" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="head_portrati" property="headPortrati" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="token_key" property="tokenKey" jdbcType="VARCHAR" />
    <result column="question" property="question" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="open_creditfile" property="openCreditfile" jdbcType="TINYINT" />
    <result column="last_login_date" property="lastLoginDate" jdbcType="TIMESTAMP" />
    <result column="cate" property="cate" jdbcType="INTEGER" />
    <result column="wx_no" property="wxNo" jdbcType="VARCHAR" />
    <result column="zfb_id" property="zfbId" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ListBaseResultMap" type="vitily.com.tv_entity.mem.TvMemBase" extends="BaseResultMap" >
  	<result column="groupName" property="groupName" jdbcType="VARCHAR" />
    <result column="memRealName" property="memRealName" jdbcType="VARCHAR" />
    <result column="personalCreditPoints" property="personalCreditPoints" jdbcType="INTEGER" />
    <result column="companyCreditPoints" property="companyCreditPoints" jdbcType="INTEGER" />
    <association property="localAccount" javaType="vitily.com.tb_entity.mem.TbMemLocalAccount">
      <id column="localAccount_id" property="id" jdbcType="INTEGER" />
      <result column="localAccount_create_date" property="createDate" jdbcType="TIMESTAMP" />
      <result column="localAccount_update_date" property="updateDate" jdbcType="TIMESTAMP" />
      <result column="localAccount_freeze_amount" property="freezeAmount" jdbcType="DECIMAL" />
      <result column="localAccount_available_amount" property="availableAmount" jdbcType="DECIMAL" />
      <result column="localAccount_version" property="version" jdbcType="INTEGER" />
    </association>
  </resultMap>

  <resultMap id="TvResultMap" type="vitily.com.tv_entity.mem.TvMemBase" extends="ListBaseResultMap" >

  </resultMap>
  <sql id="Base_Column_List" >
    <include refid="vitily.com.mapper.comm.CommonMapper.ColumnList" />,
    e.`name`, e.`group_id`, e.`type`, e.`nick_name`, e.`email`,
    e.`reg_from`, e.`qq`, e.`description`, e.`head_portrati`, e.`salt`,
    e.`password`, e.`token_key`, e.`question`, e.`answer`, e.`open_creditfile`,
    e.`last_login_date`,e.`cate`,e.`wx_no`,e.`zfb_id`,e.`level`,e.`parent_id`
  </sql>
  <sql id="query_condition">
    <if test="null != entity">
      <if test="entity.name != null and entity.name != ''" >
        and e.name = #{entity.name,jdbcType=VARCHAR}
      </if>
      <if test="entity.wxNo != null and entity.wxNo != ''" >
        and e.wx_no = #{entity.wxNo,jdbcType=VARCHAR}
      </if>
      <if test="entity.cate != null" >
        and e.cate = #{entity.cate,jdbcType=INTEGER}
      </if>
      <if test="entity.nickName != null and entity.nickName != ''" >
        and e.nick_name = #{entity.nickName,jdbcType=VARCHAR}
      </if>
      <if test="entity.groupId != null" >
        and e.group_id = #{entity.groupId,jdbcType=BIGINT}
      </if>
      <if test="entity.id != null" >
        and e.id = #{entity.id,jdbcType=BIGINT}
      </if>
      <if test="entity.type != null" >
        and e.type = #{entity.type,jdbcType=INTEGER}
      </if>
      <if test="entity.openCreditfile != null" >
        and e.open_creditfile = #{entity.openCreditfile,jdbcType=INTEGER}
      </if>
      <if test="entity.email != null and entity.email != ''" >
        and e.email = #{entity.email,jdbcType=VARCHAR}
      </if>
      <if test="entity.regFrom != null" >
        and e.reg_from = #{entity.regFrom,jdbcType=INTEGER}
      </if>
      <if test="entity.qq != null and entity.qq != ''" >
        and e.qq = #{entity.qq,jdbcType=VARCHAR}
      </if>
      <if test="entity.tokenKey != null and entity.tokenKey != ''" >
        and e.token_key = #{entity.tokenKey,jdbcType=VARCHAR}
      </if>
      <if test="entity.parentId != null " >
        and e.parent_id = #{entity.parentId,jdbcType=INTEGER}
      </if>
      <include refid="vitily.com.mapper.comm.CommonMapper.entity_query_condition" />
    </if>

      <!-- ts -->
    <if test="beginLastLoginDate != null and beginLastLoginDate != ''">
      and e.last_login_date >= #{beginLastLoginDate,jdbcType=VARCHAR}
    </if>
    <if test="endLastLoginDate != null and endLastLoginDate != ''">
      <![CDATA[and e.last_login_date <= #{endLastLoginDate,jdbcType=VARCHAR}]]>
    </if>
    <if test="selName != null and selName != ''" >
      and (
      e.name like concat('%',#{selName,jdbcType=VARCHAR},'%')
      or
      e.nick_name like concat('%',#{selName,jdbcType=VARCHAR},'%')
      )
    </if>
    <if test="email != null and email != ''" >
      and (
      e.email like concat('%',#{email,jdbcType=VARCHAR},'%')
      )
    </if>
    <if test="qq != null and qq != ''" >
      and (
      e.qq like concat('%',#{qq,jdbcType=VARCHAR},'%')
      )
    </if>
    <if test="groupIdStr != null and groupIdStr != ''" >
      and e.group_id in(${groupIdStr})
    </if>
    <if test="typeStr != null and typeStr != ''" >
      and e.type in(${typeStr})
    </if>
    <if test="regFromStr != null and regFromStr != ''" >
      and e.reg_from in(${regFromStr})
    </if>
    <include refid="vitily.com.mapper.comm.CommonMapper.ts_query_condition" />
  </sql>
  <sql id="query_exist_condition">
  	  (1=0
    <if test="null != entity">
      <if test="entity.name != null and entity.name != ''" >
        or e.name = #{entity.name,jdbcType=VARCHAR}
      </if>
      <if test="entity.nickName != null and entity.nickName != ''" >
        or e.nick_name = #{entity.nickName,jdbcType=VARCHAR}
      </if>
      <if test="entity.email != null and entity.email != ''" >
        or e.email = #{entity.email,jdbcType=VARCHAR}
      </if>
      <if test="entity.qq != null and entity.qq != ''" >
        or e.qq = #{entity.qq,jdbcType=VARCHAR}
      </if>
    </if>
      )
    <if test="null !=entity and null != entity.id">
      and e.id != #{entity.id,jdbcType=INTEGER}
    </if>
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_mem_base e
    where e.`id` = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="vitily.com.tb_entity.mem.TbMemBase" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_mem_base (`create_date`, `update_date`, `deltag`,
    `state`, `sort`, `name`,
    `group_id`, `type`, `nick_name`,
    `email`, `reg_from`, `qq`,
    `description`, `head_portrati`, `salt`,
    `password`, `token_key`, `question`,
    `answer`, `open_creditfile`, `last_login_date`,
    `cate`,`wx_no`,`zfb_id`,`level`,`parent_id`)
    values (#{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{deltag,jdbcType=INTEGER},
    #{state,jdbcType=INTEGER}, #{sort,jdbcType=DECIMAL}, #{name,jdbcType=VARCHAR},
    #{groupId,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{nickName,jdbcType=VARCHAR},
    #{email,jdbcType=VARCHAR}, #{regFrom,jdbcType=INTEGER}, #{qq,jdbcType=VARCHAR},
    #{description,jdbcType=VARCHAR}, #{headPortrati,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
    #{password,jdbcType=VARCHAR}, #{tokenKey,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR},
    #{answer,jdbcType=VARCHAR}, #{openCreditfile,jdbcType=TINYINT}, #{lastLoginDate,jdbcType=TIMESTAMP},
    #{cate,jdbcType=INTEGER}, #{wxNo,jdbcType=VARCHAR}, #{zfbId,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="vitily.com.tb_entity.mem.TbMemBase" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_mem_base
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="createDate != null" >
        `create_date`,
      </if>
      <if test="updateDate != null" >
        `update_date`,
      </if>
      <if test="deltag != null" >
        `deltag`,
      </if>
      <if test="state != null" >
        `state`,
      </if>
      <if test="sort != null" >
        `sort`,
      </if>
      <if test="name != null" >
        `name`,
      </if>
      <if test="groupId != null" >
        `group_id`,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="nickName != null" >
        `nick_name`,
      </if>
      <if test="email != null" >
        `email`,
      </if>
      <if test="regFrom != null" >
        `reg_from`,
      </if>
      <if test="qq != null" >
        `qq`,
      </if>
      <if test="description != null" >
        `description`,
      </if>
      <if test="headPortrati != null" >
        `head_portrati`,
      </if>
      <if test="salt != null" >
        `salt`,
      </if>
      <if test="password != null" >
        `password`,
      </if>
      <if test="tokenKey != null" >
        `token_key`,
      </if>
      <if test="question != null" >
        `question`,
      </if>
      <if test="answer != null" >
        `answer`,
      </if>
      <if test="openCreditfile != null" >
        `open_creditfile`,
      </if>
      <if test="lastLoginDate != null" >
        `last_login_date`,
      </if>
      <if test="cate != null" >
        `cate`,
      </if>
      <if test="wxNo != null" >
        `wx_no`,
      </if>
      <if test="zfbId != null" >
        `zfb_id`,
      </if>
      <if test="level != null" >
        `level`,
      </if>
      <if test="parentId != null" >
        `parent_id`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deltag != null" >
        #{deltag,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=DECIMAL},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="regFrom != null" >
        #{regFrom,jdbcType=INTEGER},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="headPortrati != null" >
        #{headPortrati,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="tokenKey != null" >
        #{tokenKey,jdbcType=VARCHAR},
      </if>
      <if test="question != null" >
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="openCreditfile != null" >
        #{open_creditfile,jdbcType=TINYINT},
      </if>
      <if test="lastLoginDate != null" >
        #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cate != null" >
        #{cate,jdbcType=INTEGER},
      </if>
      <if test="wxNo != null" >
        #{wxNo,jdbcType=VARCHAR},
      </if>
      <if test="zfbId != null" >
        #{zfbId,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="vitily.com.tb_entity.mem.TbMemBase" >
    update tb_mem_base
    <set >
      <if test="createDate != null" >
        `create_date` = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        `update_date` = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deltag != null" >
        `deltag` = #{deltag,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        `sort` = #{sort,jdbcType=DECIMAL},
      </if>
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        `group_id` = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="nickName != null" >
        `nick_name` = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        `email` = #{email,jdbcType=VARCHAR},
      </if>
      <if test="regFrom != null" >
        `reg_from` = #{regFrom,jdbcType=INTEGER},
      </if>
      <if test="qq != null" >
        `qq` = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        `description` = #{description,jdbcType=VARCHAR},
      </if>
      <if test="headPortrati != null" >
        `head_portrati` = #{headPortrati,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        `salt` = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="tokenKey != null" >
        `token_key` = #{tokenKey,jdbcType=VARCHAR},
      </if>
      <if test="question != null" >
        `question` = #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        `answer` = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="openCreditfile != null" >
        `open_creditfile` = #{openCreditfile,jdbcType=TINYINT},
      </if>
      <if test="lastLoginDate != null" >
        `last_login_date` = #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cate != null" >
        `cate` = #{cate,jdbcType=INTEGER},
      </if>
      <if test="wxNo != null" >
        `wx_no` = #{wxNo,jdbcType=VARCHAR},
      </if>
      <if test="zfbId != null" >
        `zfb_id` = #{zfbId,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        `parent_id` = #{parentId,jdbcType=INTEGER},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="vitily.com.tb_entity.mem.TbMemBase" >
    update tb_mem_base
    set `create_date` = #{createDate,jdbcType=TIMESTAMP},
      `update_date` = #{updateDate,jdbcType=TIMESTAMP},
      `deltag` = #{deltag,jdbcType=INTEGER},
      `state` = #{state,jdbcType=INTEGER},
      `sort` = #{sort,jdbcType=DECIMAL},
      `name` = #{name,jdbcType=VARCHAR},
      `group_id` = #{groupId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=TINYINT},
      `nick_name` = #{nickName,jdbcType=VARCHAR},
      `email` = #{email,jdbcType=VARCHAR},
      `reg_from` = #{regFrom,jdbcType=INTEGER},
      `qq` = #{qq,jdbcType=VARCHAR},
      `description` = #{description,jdbcType=VARCHAR},
      `head_portrati` = #{headPortrati,jdbcType=VARCHAR},
      `salt` = #{salt,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `token_key` = #{tokenKey,jdbcType=VARCHAR},
      `question` = #{question,jdbcType=VARCHAR},
      `answer` = #{answer,jdbcType=VARCHAR},
      `open_creditfile` = #{openCreditfile,jdbcType=TINYINT},
      `last_login_date` = #{lastLoginDate,jdbcType=TIMESTAMP},
      `cate` = #{cate,jdbcType=INTEGER},
      `wx_no` = #{wxNo,jdbcType=VARCHAR},
      `zfb_id` = #{zfbId,jdbcType=VARCHAR},
      `level` = #{level,jdbcType=VARCHAR}
      `parent_id` = #{parentId,jdbcType=VARCHAR}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <sql id="select_for_tv">
      select e.*,
      a.id localAccount_id,
      a.create_date localAccount_create_date,
      a.update_date localAccount_update_date,
      a.freeze_amount localAccount_freeze_amount,
      a.available_amount localAccount_available_amount,
      a.version localAccount_version,
      pc.credit_points personalCreditPoints,
      cc.credit_points companyCreditPoints,
      case when e.type = 0 then (select real_name from tb_mem_personal_userinfo where member_id=e.id)
      else (select company_name from tb_mem_company_userinfo where member_id=e.id) end memRealName,
      g.name as groupName
      from tb_mem_base e
      left join tb_mem_group g on e.group_id=g.id
      left join tb_mem_local_account a on e.id=a.member_id
      left join tb_mem_personal_creditfile pc on e.id=pc.member_id
      left join tb_mem_company_creditfile cc on e.id=cc.member_id
  </sql>
  <select id="getTvMemberByLogin" resultMap="TvResultMap" parameterType="vitily.com.api_entity.req_entity.other.TqMemLogin" >
    <include refid="select_for_tv" />
	where (e.name=#{userName} or e.email=#{userName})
    and e.deltag = 0
    limit 1
   </select>
  <select id="selectByPrimaryKeyForTv" resultMap="TvResultMap" parameterType="java.lang.Integer" >
    <include refid="select_for_tv" />
    where e.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getMaxBean" parameterType="vitily.com.ts_entity.mem.TsMemBase" resultMap="BaseResultMap">
    select e.* from tb_mem_base e
    where 1=1
    <include refid="query_condition" />
    order by e.sort desc limit 1
  </select>

  <select id="getCountPaging" parameterType="vitily.com.ts_entity.mem.TsMemBase" resultType="java.lang.Integer">
    select count(1) as recordCount from tb_mem_base e where 1=1
    <include refid="query_condition" />
  </select>
  <select id="getListByBean" parameterType="vitily.com.ts_entity.mem.TsMemBase" resultMap="ListBaseResultMap">
  	select e.*,
    a.freeze_amount localAccount_freeze_amount,
    a.available_amount localAccount_available_amount,
    case when e.type = 0 then (select real_name from tb_mem_personal_userinfo where member_id=e.id)
    else (select company_name from tb_mem_company_userinfo where member_id=e.id) end memRealName,
  	g.name as groupName
    from tb_mem_base e
	left join tb_mem_group g on e.group_id=g.id
    left join tb_mem_local_account a on e.id=a.member_id
	where 1 = 1
    <include refid="query_condition" />
    <if test="null != pageInfo">
      <if test="pageInfo.fieldOrder !=null and pageInfo.fieldOrder != ''">
        order by ${pageInfo.fieldOrder}
      </if>
      limit #{pageInfo.step},#{pageInfo.pageSize}
    </if>
  </select>
  <select id="isExists" parameterType="vitily.com.ts_entity.mem.TsMemBase" resultType="java.lang.Boolean">
    select case when
	exists(select 0 from tb_mem_base e where 
	    <include refid="query_exist_condition" />
	) then 1
	else 0
	end as exists_record from dual
  </select>
  <select id="selectCommssionInfo" resultType="vitily.com.api_entity.resp_entity.mem.TmMemCommissionInfo" parameterType="java.lang.Integer">
    SELECT
      ifnull(dayAmount,0) dayAmount,
      ifnull(monthAmount,0) monthAmount,
      ifnull(totalAmount,0) totalAmount,
      ifnull(inviteModels,0) inviteModels,
      ifnull(inviteSellers,0) inviteSellers
      from(
      select
      (select sum(amount) from tb_mem_commission_flow where member_id=e.id and create_date >= DATE_FORMAT( CURDATE(), '%Y-%m-%d 00:00:00'))as dayAmount,
      (select sum(amount) from tb_mem_commission_flow where member_id=e.id and create_date >= DATE_FORMAT( CURDATE(), '%Y-%m-01 00:00:00'))as monthAmount,
      (select available_balance+freeze_balance from tb_mem_commission where member_id=e.id) as totalAmount,
      (select count(id)from tb_mem_base where parent_id=e.id and cate=0)as inviteModels,
      (select count(id)from tb_mem_base where parent_id=e.id and cate=1)as inviteSellers
      from tb_mem_base e where id=#{id}
      )ex
  </select>

  <select id="selectRecommendInfo" resultType="vitily.com.api_entity.resp_entity.mem.TmMemRecommendInfo" parameterType="java.lang.Integer">
    select
    (select ifnull(sum(amount),0) from tb_finance_account_flow where member_id = #{memberId} and funds_type in(2023,2053,2063,2083))recommendProfit,
    (select count(0) from tb_mem_base where parent_id = #{memberId} )recommendCount,
    (select count(0) from tb_mem_base where parent_id = #{memberId} and `level` = 1 )recommendVip1Count,
    (select count(0) from tb_mem_base where parent_id = #{memberId} and `level` = 2 )recommendVip2Count,
    (select count(0) from tb_mem_base where parent_id = #{memberId} and `level` = 3 )recommendVip3Count
    from dual
  </select>

  <select id="getRecommendList" parameterType="vitily.com.ts_entity.mem.TsMemBase" resultType="vitily.com.api_entity.resp_entity.mem.TmMemRecommendListInfo">
    select
    e.create_date registerDate,
    e.name userName,
    e.level,
    (select ifnull(sum(amount),0) from tb_finance_account_flow where member_id = e.parent_id and funds_type in(2023,2053,2063,2083) and relation_id= e.id )recommendProfit
    from tb_mem_base e
    where 1=1
    <include refid="query_condition" />
    <if test="null != pageInfo">
      <if test="pageInfo.fieldOrder !=null and pageInfo.fieldOrder != ''">
        order by ${pageInfo.fieldOrder}
      </if>
      limit #{pageInfo.step},#{pageInfo.pageSize}
    </if>
  </select>
  <select id="getForRankingReward" parameterType="vitily.com.ts_entity.mem.TsMemCommission" resultType="vitily.com.api_entity.resp_entity.mem.TmMemCommissionRinkingInfo">
    select x.*,
    m.nick_name nickName,ifnull(m.head_portrati,'') headPortrati from(
    select member_id,ifnull(sum(amount),0) rewardMoney from tb_finance_account_flow where funds_type in(2023,2053,2063,2083)
    <if test="beginCreateDate != null and beginCreateDate != ''">
      and create_date >= #{beginCreateDate}
    </if>
    group by member_id
    )x left join tb_mem_base m on m.id = x.member_id where m.cate = 0 order by x.rewardMoney desc
    <if test="null != pageInfo">
      limit #{pageInfo.step},#{pageInfo.pageSize}
    </if>
  </select>
</mapper>