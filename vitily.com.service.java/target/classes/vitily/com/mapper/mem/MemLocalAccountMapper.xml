<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vitily.com.mapper.mem.MemLocalAccountMapper">
  <resultMap id="BaseResultMap" type="vitily.com.tb_entity.mem.TbMemLocalAccount">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="freeze_amount" property="freezeAmount" jdbcType="DECIMAL" />
    <result column="available_amount" property="availableAmount" jdbcType="DECIMAL" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ListBaseResultMap" type="vitily.com.tv_entity.mem.TvMemLocalAccount" extends="BaseResultMap" >
  </resultMap>
  <resultMap id="TvResultMap" type="vitily.com.tv_entity.mem.TvMemLocalAccount" extends="ListBaseResultMap" >
  </resultMap>
  <sql id="Base_Column_List">
    e.`id`, e.`member_id`, e.`create_date`, e.`update_date`, e.`freeze_amount`,
    e.`available_amount`, e.`version`
  </sql>
  <sql id="query_condition">
    <if test="null != entity">
      <if test="entity.memberId != null" >
        and e.member_id = #{entity.memberId}
      </if>
    </if>
  </sql>
  <sql id="query_exist_condition">
  	(1=0
    <if test="null != entity">
      <if test="entity.memberId != null" >
        or (
        	e.member_id=#{entity.memberId}
           )
      </if>
    </if>
      )
    <include refid="vitily.com.mapper.comm.CommonMapper.exist_query_condition" />
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_mem_local_account e
    where e.`id` = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByMemberId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select *from tb_mem_local_account where member_id = #{member_id}
  </select>
  <insert id="insert" parameterType="vitily.com.tb_entity.mem.TbMemLocalAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_mem_local_account (`member_id`, `create_date`, `update_date`,
    `freeze_amount`, `available_amount`, `version`
    )
    values (#{memberId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP},
    #{freezeAmount,jdbcType=DECIMAL}, #{availableAmount,jdbcType=DECIMAL}, #{version,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="vitily.com.tb_entity.mem.TbMemLocalAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_mem_local_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        `member_id`,
      </if>
      <if test="createDate != null" >
        `create_date`,
      </if>
      <if test="updateDate != null" >
        `update_date`,
      </if>
      <if test="freezeAmount != null" >
        `freeze_amount`,
      </if>
      <if test="availableAmount != null" >
        `available_amount`,
      </if>
      <if test="version != null" >
        `version`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="freezeAmount != null" >
        #{freezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="availableAmount != null" >
        #{availableAmount,jdbcType=DECIMAL},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="selectByPrimaryKeyForTv" resultMap="TvResultMap" parameterType="java.lang.Integer" >
    select
    e.*
    from tb_mem_local_account e
    where e.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByMemberIdForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select e.* from tb_mem_local_account e where e.member_id = #{memberId,jdbcType=INTEGER} for update
  </select>
  <update id="updateByTs" parameterType="vitily.com.ts_entity.mem.TsMemLocalAccount">
    update tb_mem_local_account
    <set >
      <if test="entity.updateDate != null" >
        `update_date` = #{entity.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="entity.freezeAmount != null" >
        `freeze_amount` = #{entity.freezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="entity.availableAmount != null" >
        `available_amount` = #{entity.availableAmount,jdbcType=DECIMAL},
      </if>
      <if test="entity.version != null" >
        `version` = #{entity.version,jdbcType=INTEGER},
      </if>
    </set>
    where member_id=#{entity.memberId} and version=#{oldVersion}
  </update>
  <select id="getCountPaging" parameterType="vitily.com.ts_entity.mem.TsMemLocalAccount" resultType="java.lang.Integer">
    select count(1) as recordCount from tb_mem_local_account e where 1=1
    <include refid="query_condition" />
  </select>
  <select id="getListByBean" parameterType="vitily.com.ts_entity.mem.TsMemLocalAccount" resultMap="ListBaseResultMap">
    select
    e.*
    from tb_mem_local_account e
    where 1=1
    <include refid="query_condition" />
    <if test="null != pageInfo">
      <if test="pageInfo.fieldOrder !=null">
        <choose>
          <when test="pageInfo.sortField !='e.sort'">
            order by ${pageInfo.fieldOrder}
          </when>
          <otherwise>
            order by create_date desc
          </otherwise>
        </choose>
      </if>
      limit #{pageInfo.step},#{pageInfo.pageSize}
    </if>
  </select>
  <select id="isExists" parameterType="vitily.com.ts_entity.mem.TsMemLocalAccount" resultType="java.lang.Boolean">
    select case when
	exists(select 0 from tb_mem_local_account e where 
	    <include refid="query_exist_condition" />
	) then 1
	else 0
	end as exists_record from dual
  </select>

  <select id="selectAmountInfo" parameterType="java.lang.Integer" resultType="vitily.com.api_entity.resp_entity.mem.TmMemAccountInfo" >
    select freeze_amount freezeAmount
    ,available_amount availableAmount
    ,(select ifnull(sum(amount),0) from tb_finance_account_flow where member_id = e.id and funds_type in(2023,2053,2063,2073,2083) and create_date >= DATE_FORMAT( CURDATE(), '%Y-%m-01 00:00:00'))monthProfit
    ,(select ifnull(sum(amount),0) from tb_finance_account_flow where member_id = e.id and funds_type in(2023,2053,2063,2073,2083))cumulativeProfit
    ,(select ifnull(sum(amount),0) from tb_finance_account_flow where member_id = e.id and funds_type in(2023,2053,2063,2083))recommendProfit
    from tb_mem_local_account e where e.member_id = #{memberId} limit 1
  </select>

</mapper>