<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="vitily.com.mapper.mem.MemMoneyTransferMapper" >
  <resultMap id="BaseResultMap" type="vitily.com.tb_entity.mem.TbMemMoneyTransfer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="deltag" property="deltag" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="call" property="call" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
    <result column="audit_adm_user_id" property="auditAdmUserId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ListBaseResultMap" type="vitily.com.tv_entity.mem.TvMemMoneyTransfer" extends="BaseResultMap" >
    <result column="memName" property="memName" jdbcType="VARCHAR" />
    <result column="memRealName" property="memRealName" jdbcType="VARCHAR" />
    <result column="auditAdmUserName" property="auditAdmUserName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="TvResultMap" type="vitily.com.tv_entity.mem.TvMemMoneyTransfer" extends="ListBaseResultMap" >
  </resultMap>
  <sql id="Base_Column_List" >
    e.`id`, e.`create_date`, e.`update_date`, e.`deltag`, e.`state`, e.`member_id`, e.`account_name`,
    e.`call`, e.`amount`, e.`order_no`, e.`pic_url`,e.`audit_adm_user_id`
  </sql>
  <sql id="query_condition">
    <if test="null != entity">
      <if test="entity.memberId != null" >
        and e.member_id = #{entity.memberId,jdbcType=INTEGER}
      </if>
      <if test="entity.auditAdmUserId != null" >
        and e.audit_adm_user_id = #{entity.auditAdmUserId,jdbcType=INTEGER}
      </if>
      <if test="entity.orderNo != null and entity.orderNo != ''" >
        and e.order_no = #{entity.orderNo,jdbcType=VARCHAR}
      </if>
      <include refid="vitily.com.mapper.comm.CommonMapper.entity_query_condition" />
    </if>
    <!-- ts -->
    <include refid="vitily.com.mapper.comm.CommonMapper.ts_query_condition" />
  </sql>
  <sql id="query_exist_condition">
    (1=0
    <if test="entity.name != null and entity.name != ''" >
      or (e.name=#{entity.name,jdbcType=VARCHAR})
    </if>
    )
    <if test="null !=entity and null != entity.id">
      and e.id != #{entity.id,jdbcType=INTEGER}
    </if>
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_mem_money_transfer e
    where e.`id` = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insertSelective" parameterType="vitily.com.tb_entity.mem.TbMemMoneyTransfer" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_mem_money_transfer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="createDate != null" >
        `create_date`,
      </if>
      <if test="updateDate != null" >
        `update_date`,
      </if>
      <if test="deltag != null" >
        `deltag`,
      </if>
      <if test="state != null" >
        `state`,
      </if>
      <if test="memberId != null" >
        `member_id`,
      </if>
      <if test="accountName != null" >
        `account_name`,
      </if>
      <if test="call != null" >
        `call`,
      </if>
      <if test="amount != null" >
        `amount`,
      </if>
      <if test="orderNo != null" >
        `order_no`,
      </if>
      <if test="picUrl != null" >
        `pic_url`,
      </if>
      <if test="auditAdmUserId != null" >
        `audit_adm_user_id`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deltag != null" >
        #{deltag,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="call != null" >
        #{call,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null" >
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="auditAdmUserId != null" >
        #{auditAdmUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="vitily.com.tb_entity.mem.TbMemMoneyTransfer" >
    update tb_mem_money_transfer
    <set >
      <if test="createDate != null" >
        `create_date` = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        `update_date` = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deltag != null" >
        `deltag` = #{deltag,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        `member_id` = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="accountName != null" >
        `account_name` = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="call != null" >
        `call` = #{call,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        `amount` = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="orderNo != null" >
        `order_no` = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null" >
        `pic_url` = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="auditAdmUserId != null" >
        `audit_adm_user_id` = #{auditAdmUserId,jdbcType=INTEGER},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <sql id="select_for_list_tv">
    select
    e.*,
    m.name memName,
    case when m.type = 0 then (select real_name from tb_mem_personal_userinfo where member_id=m.id) else (select company_name from tb_mem_company_userinfo where member_id=m.id) end memRealName,

    du.user_name auditAdmUserName
    from tb_mem_money_transfer e
    left join tb_mem_base m on m.id=e.member_id
    left join tb_adm_user du on du.id=e.audit_adm_user_id
    where 1 = 1
  </sql>
  <select id="selectByPrimaryKeyForTv" resultMap="TvResultMap" parameterType="java.lang.Integer" >
    <include refid="select_for_list_tv" />
    and e.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getMaxBean" parameterType="vitily.com.ts_entity.mem.TsMemGroup" resultMap="BaseResultMap">
    select e.* from tb_mem_money_transfer e
    where 1=1
    <include refid="query_condition" />
    order by e.sort desc limit 1
  </select>

  <select id="getCountPaging" parameterType="vitily.com.ts_entity.mem.TsMemGroup" resultType="java.lang.Integer">
    select count(1) as recordCount from tb_mem_money_transfer e where 1=1
    <include refid="query_condition" />
  </select>
  <select id="getListByBean" parameterType="vitily.com.ts_entity.mem.TsMemGroup" resultMap="ListBaseResultMap">
    <include refid="select_for_list_tv" />
    <include refid="query_condition" />
    <include refid="vitily.com.mapper.comm.CommonMapper.page_info_id_instanceof_sort" />
  </select>
  <select id="isExists" parameterType="vitily.com.ts_entity.mem.TsMemGroup" resultType="java.lang.Boolean">
    select case when
    exists(select 0 from tb_mem_money_transfer e where
    <include refid="query_exist_condition" />
    ) then 1
    else 0
    end as exists_record from dual
  </select>
</mapper>